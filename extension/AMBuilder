# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectname = 'connect'

project = builder.LibraryProject(projectname + '.ext')
project.sources = [
  'extension.cpp',
  os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp'),
  os.path.join(Extension.sm_root, 'public', 'CDetour', 'detours.cpp'),
  os.path.join(Extension.sm_root, 'public', 'asm', 'asm.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'decode.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'itab.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn-att.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn-intel.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'syn.c'),
  os.path.join(Extension.sm_root, 'public', 'libudis86', 'udis86.c')
]

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]

  for cxx in builder.targets:
    if not cxx.target.arch in sdk.platformSpec[cxx.target.platform]:
      continue
  
    binary = Extension.HL2ExtConfig(project, builder, cxx, projectname + '.ext.' + sdk.ext, sdk)

Extension.extensions = builder.Add(project)